:root {
  --bg: #f7f7fb;
  --card: #ffffff;
  --text: #222;
  --muted: #666;
  --accent: #3a7bd5;
}

* { box-sizing: border-box; }

/* ===== レイアウト基盤（sticky footer） ===== */
html, body { height: 100%; }
html { scroll-behavior: smooth; }
body {
  margin: 0;
  font-family: 'Noto Sans JP', sans-serif;
  background: #fff7d6 url("./assets/background.jpg") center/cover fixed;
  display: flex;
  flex-direction: column;
  min-height: 100dvh;
}
main { flex: 1 0 auto; }

/* ===== ヘッダー ===== */
header {
  background: #fff;                 /* ← 不透明 */
  border-bottom: 1px solid #ddd;
  position: sticky;
  top: 0;
  z-index: 100;
}
.header-container {
  max-width: 1000px;
  margin: 0 auto;
  padding: 12px 20px;
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.site-title { font-size: 20px; font-weight: bold; color: var(--accent); margin: 0; }
.nav-list { list-style: none; display: flex; gap: 20px; margin: 0; padding: 0; }
.nav-list a { text-decoration: none; color: var(--text); font-weight: 500; transition: color .2s; }
.nav-list a:hover { color: var(--accent); }

/* ===== コンテンツ ===== */
.container { max-width: 1000px; margin: 40px auto; padding: 0 20px; }

/* 共通カード（不透明） */
.card {
  background: #fff;                 /* ← 不透明 */
  border-radius: 16px;
  padding: 24px;
  border: 1px solid #ddd;
  box-shadow: 0 8px 24px rgba(0,0,0,.06);
  transition: .3s;
}
.card:hover { transform: translateY(-6px); box-shadow: 0 20px 40px rgba(0,0,0,.12); }

h1, h2 { color: var(--text); }
h1 { font-size: 36px; }
h2 { font-size: 24px; margin-top: 20px; }
[id] { scroll-margin-top: 72px; }

.subtitle { color: var(--muted); margin: 0 0 24px; }
.actions { display: flex; gap: 12px; flex-wrap: wrap; margin-top: 16px; }
button, .link-btn {
  appearance: none; border: 0; background: var(--accent); color: #fff;
  padding: 10px 16px; border-radius: 10px; font-size: 16px; cursor: pointer;
}
.link-btn { display: inline-block; text-decoration: none; }
button:hover, .link-btn:hover { opacity: .9; }
.section { margin-top: 24px; padding-top: 16px; border-top: 1px solid #eee; }
ul { padding-left: 20px; margin: 8px 0 0; }

/* ===== フッター ===== */
footer {
  margin-top: auto;
  text-align: center; padding: 16px;
  color: var(--muted); font-size: 14px;
  background: #fff;                 /* ← 不透明 */
  border-top: 1px solid #ddd;
}

/* === ハンバーガー基本 === */
.nav-toggle {
  display: none; background: transparent; border: 0; padding: 8px; cursor: pointer;
}
.nav-toggle-bar {
  display: block; width: 24px; height: 2px; background: var(--text);
  margin: 5px 0; transition: transform .2s, opacity .2s;
}

/* スマホ幅でメニューを折りたたみ */
@media (max-width: 768px) {
  .nav-toggle { display: inline-block; }

  #global-nav {
    display: none;
    position: absolute; left: 0; right: 0;
    top: 56px;
    background: #fff;              /* ← 不透明 */
    border-bottom: 1px solid #ddd;
    padding: 12px 16px;
  }
  #global-nav.open { display: block; }

  .nav-list { flex-direction: column; gap: 12px; }
  .nav-list a { display: block; padding: 8px 0; }

  .nav-toggle[aria-expanded="true"] .nav-toggle-bar:nth-child(1) { transform: translateY(7px) rotate(45deg); }
  .nav-toggle[aria-expanded="true"] .nav-toggle-bar:nth-child(2) { opacity: 0; }
  .nav-toggle[aria-expanded="true"] .nav-toggle-bar:nth-child(3) { transform: translateY(-7px) rotate(-45deg); }
}

/* === 作品セクション === */
.works-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 16px;
  margin-top: 12px;
}
.work-card {
  background: #fff;                /* ← 不透明 */
  border-radius: 14px;
  overflow: hidden;
  border: 1px solid #eee;
  box-shadow: 0 6px 14px rgba(0,0,0,0.06);
  display: flex;
  flex-direction: column;
  transition: transform .2s, box-shadow .2s;
}
.work-card:hover { transform: translateY(-6px); box-shadow: 0 14px 28px rgba(0,0,0,0.12); }
.work-card img { width: 100%; height: 140px; object-fit: cover; display: block; }
.work-body { padding: 12px; background: #fff; }   /* ← 念のため */
.work-body h3 { margin: 0 0 6px; font-size: 18px; color: var(--text); }
.work-body p { margin: 0 0 10px; color: var(--muted); font-size: 14px; }

@media (max-width: 992px) { .works-grid { grid-template-columns: repeat(2, 1fr); } }
@media (max-width: 600px)  { .works-grid { grid-template-columns: 1fr; } }

/* === お問い合わせフォーム === */
.contact-form {
  margin-top: 12px; background: #fff; border-radius: 14px; padding: 16px;
  border: 1px solid #eee;
  box-shadow: 0 6px 14px rgba(0,0,0,0.06);
}
.form-row { display: flex; flex-direction: column; gap: 6px; margin-bottom: 12px; }
.contact-form label { font-size: 14px; color: var(--text); }
.contact-form input, .contact-form textarea {
  width: 100%; border: 1px solid #ddd; border-radius: 10px; padding: 10px 12px;
  font-size: 16px; background: #fff;
}
.contact-form input:focus, .contact-form textarea:focus {
  outline: none; border-color: var(--accent); box-shadow: 0 0 0 3px rgba(58,123,213,.15);
}
.form-actions { display: flex; align-items: center; gap: 12px; }
.form-note { color: var(--muted); }
@media (max-width: 480px) { .contact-form { padding: 14px; } }

/* === スキル === */
.skills-list {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
  gap: 16px;
  margin-top: 12px; padding: 0; list-style: none;
}
.skills-list li {
  background: #fff; border: 1px solid #eee; border-radius: 10px;
  padding: 12px; text-align: center; font-weight: 500;
  box-shadow: 0 4px 10px rgba(0,0,0,0.05);
}

p { margin: 0 0 0.5em; }
.work-body p strong { color: var(--accent); font-weight: 700; }

/* === SNSリンク === */
.social-links { margin-top: 12px; display: flex; justify-content: center; gap: 32px; }
.social-links a {
  color: var(--accent);
  font-size: 28px;
  width: 48px; height: 48px;
  display: flex; align-items: center; justify-content: center;
  border: 2px solid var(--accent); border-radius: 10px;
  transition: all 0.2s;
  text-decoration: none;
  background: #fff;                 /* ← 土台を不透明に */
}
.social-links a:hover { color: #fff; background: var(--accent); transform: scale(1.1); }
@media (max-width: 600px) { .social-links a { font-size: 48px; width: 80px; height: 80px; border-width: 3px; } }

/* ===================== */
/* ===== 天気アプリ ===== */
/* ===================== */
#weather { scroll-margin-top: 72px; }

/* 入力UI（中央寄せ） */
.weather-ui {
  display: flex;
  flex-direction: column;
  gap: 12px;
  max-width: 300px;
  margin: 0 auto;
}
#city {
  width: 100%; height: 40px; font-size: 16px;
  padding: 8px 10px; border: 1px solid #ddd; border-radius: 8px; text-align: center;
}
#getWeather, #useGeoloc {
  height: 40px; border: none; border-radius: 8px; color: #fff; cursor: pointer;
}
#getWeather { background: #111; }
#useGeoloc { background: #666; }
#useGeoloc:hover { opacity: .9; }

/* 結果カード（不透明） */
.weather-result {
  flex: 1;
  min-height: 160px;
  padding: 14px;
  border: 1px solid #eee; border-radius: 12px;
  background: #fff;               /* ← 不透明 */
  max-width: 960px;
  margin-top: 20px;
  display: grid;
  place-items: start center;
  gap: 12px;
}

.weather-card {
  display: grid !important;
  grid-template-columns: 1fr !important;  /* 1カラムで中央 */
  justify-items: center !important;
  row-gap: 12px;
  column-gap: 0 !important;
  padding: 16px;
  background: #fff;               /* ← 不透明 */
  border: 1px solid #eee;
  border-radius: 12px;
  box-shadow: 0 6px 14px rgba(0,0,0,.06);
  text-align: center !important;
}

.weather-top {
  display: grid !important;
  grid-auto-flow: column;
  justify-content: center !important;
  align-items: center;
  gap: 40px;
}

.weather-info {
  font-size: 18px;
  font-weight: 700;
  white-space: nowrap;
}
.weather-info .desc {
  font-size: 14px;
  font-weight: 400;
  color: #666;
  margin-left: 4px;
}

.temp { font-size: 40px; font-weight: 700; line-height: 1; }
.temp .unit { font-size: 18px; font-weight: 600; margin-left: 2px; }

.weather-stats {
  display: flex !important;
  flex-wrap: wrap !important;
  justify-content: center !important;
  gap: 8px 12px !important;
}
.stat {
  display: inline-flex; align-items: center;
  border: 1px solid #eee; border-radius: 999px;
  padding: 6px 10px; font-size: 14px; line-height: 1;
  background: #fafafa;            /* ← 半透明でなく薄グレー */
}

@media (max-width: 768px) {
  .weather-top { gap: 24px; }
}

/* アニメ系 */
.fade-in { opacity: 0; transform: translateY(10px); animation: fadeInUp 0.5s ease forwards; }
@keyframes fadeInUp { to { opacity: 1; transform: translateY(0); } }
.loading {
  display: inline-block; width: 22px; height: 22px;
  border: 3px solid #ddd; border-top-color: #333;
  border-radius: 50%; animation: spin 1s linear infinite; vertical-align: middle;
}
@keyframes spin { to { transform: rotate(360deg); } }
.error {
  color: #c00; font-weight: 700; padding: 6px 10px;
  background: #ffecec; border: 1px solid #f5b5b5; border-radius: 8px; display: inline-block;
}

/* ToDo：ボタンの見た目を既存に合わせる */
.filter-btn { appearance: none; border:1px solid #ddd; background:#fff; color:#333; padding:8px 12px; border-radius:10px; cursor:pointer; }
.filter-btn[aria-pressed="true"] { background: var(--accent); color:#fff; border-color: var(--accent); }
.todo-actions .todo-del { appearance:none; border:1px solid #eee; background:#fafafa; color:#333; padding:6px 10px; border-radius:10px; cursor:pointer; }
.todo-actions .todo-del:hover { background:#f0f0f0; }

/* 共通：フォーカスリング */
button:focus-visible, a:focus-visible, input:focus-visible {
  outline: 3px solid rgba(58,123,213,.45);
  outline-offset: 2px;
}

/* ケーススタディのCTA整列 */
.cs-actions {
  display: flex; gap: 12px; flex-wrap: wrap; justify-content: center; margin-top: 12px;
}
.cs-actions .link-btn { flex: 1 1 200px; text-align: center; padding: 8px 0; font-size: 16px; border-radius: 8px; }

/* 追加：ゴーストボタンは不透明グレー */
.btn { background: var(--accent, #2563eb); color:#fff; }
.btn.ghost, button.ghost {
  background: #eee; color: var(--accent);
  border: 2px solid var(--accent);
}
.nav-toggle-bar{display:block;width:22px;height:2px;background:#333;margin:4px 0;border-radius:2px}
/* UIコンポーネント集の各セクションを白背景にする */
section {
  background: #fff;           /* 完全に不透明な白 */
  border-radius: 16px;        /* 角丸 */
  padding: 24px;              /* 内側の余白 */
  margin-bottom: 32px;        /* 下の余白 */
  box-shadow: 0 4px 12px rgba(0,0,0,0.08); /* ほんのり影で浮かせる */
}
/* ====== 透け対策：セクション系を丸ごと不透明化（強制上書き） ====== */

/* UIコンポーネント集のブロック（class=section を採用している前提） */
.section {
  background: #fff !important;        /* ← 不透明白で固定 */
  border-radius: 16px;
  padding: 24px;
  margin-bottom: 32px;
  box-shadow: 0 4px 12px rgba(0,0,0,0.08);
  border: 1px solid #e5e7eb;
}

/* 万一 <section> 要素も使っている場合はこちらも */
section.ui-section,
.container > section {
  background: #fff !important;
  border-radius: 16px;
  padding: 24px;
  margin-bottom: 32px;
  box-shadow: 0 4px 12px rgba(0,0,0,0.08);
  border: 1px solid #e5e7eb;
}

/* ガラス風の名残を無効化（念のため） */
:where(.section, section.ui-section, .ui-section, .panel, .surface) {
  backdrop-filter: none !important;
}

/* セクション見出し帯などにも半透明が残っていた場合の保険 */
:where(.section, section.ui-section) > * {
  background: transparent; /* 子要素の色はそのまま。必要ならここも #fff に */
}
/* ===== ボタンの文字を見やすくする修正版 ===== */

/* 通常ボタン */
button, .btn {
  background: var(--accent);
  color: #fff;
}

/* ゴーストボタン（白背景に青文字） */
.btn.ghost, button.ghost {
  background: #fff;
  border: 2px solid var(--accent);
  color: var(--accent);
}
.btn.ghost:hover, button.ghost:hover {
  background: var(--accent);
  color: #fff;
}

/* サブトーン（淡い色に青文字） */
.btn.subtone, button.subtone {
  background: #eef4ff;   /* 薄い水色 */
  color: var(--accent);
  border: 1px solid #c3d4f7;
}

/* 丸ボタン */
.btn.round, button.round {
  border-radius: 999px;
}

/* サイズ調整 */
.btn.small, button.small {
  font-size: 14px;
  padding: 6px 12px;
}
.btn.large, button.large {
  font-size: 18px;
  padding: 12px 20px;
}

/* 無効状態 */
button:disabled, .btn.disabled {
  background: #ccc;
  color: #666;
  border: none;
  cursor: not-allowed;
}
/* ===== ボタン可読性・強制上書き（最後に貼る） ===== */

/* デフォルト：白地に濃い文字＋薄い枠 */
button, .btn, .button, [role="button"],
[class*="btn"], [class*="button"], .chip, .pill {
  background: #fff !important;
  color: #1f2937 !important;          /* 濃いグレー */
  border: 1px solid #cbd5e1 !important;
  border-radius: 10px !important;
  font-weight: 600 !important;
}

/* 強調（primary）系があれば：濃色＋白文字 */
button.primary, .btn.primary, [class*="btn-primary"] {
  background: var(--accent) !important;
  color: #fff !important;
  border-color: var(--accent) !important;
}

/* ゴースト（ghost）系：白地にアクセント色文字＋実線枠 */
[class*="ghost"] {
  background: #fff !important;
  color: var(--accent) !important;
  border: 2px solid var(--accent) !important;
}

/* サブトーン（subtone）系：淡色にアクセント色文字 */
[class*="subtone"] {
  background: #eef4ff !important;
  color: var(--accent) !important;
  border: 1px solid #c3d4f7 !important;
}

/* 丸ボタン（round / pill） */
[class*="round"], .pill, .chip {
  border-radius: 999px !important;
  padding: 8px 16px !important;
}

/* 小さめ/大きめ（あれば） */
[class*="small"] { font-size: 14px !important; padding: 6px 12px !important; }
[class*="large"] { font-size: 18px !important; padding: 12px 20px !important; }

/* 無効状態は濃いめグレーで読めるように */
button:disabled, .btn.disabled, [aria-disabled="true"] {
  background: #e5e7eb !important;
  color: #6b7280 !important;
  border-color: #e5e7eb !important;
  opacity: 1 !important; /* 薄くしない */
  cursor: not-allowed !important;
}
/* ページ先頭のカード（=「UIコンポーネント集」）だけ角丸＆白背景を適用 */
.container > *:first-child {
  background: #fff;
  border-radius: 16px;
  padding: 16px 20px;
  border: 1px solid #e5e7eb;
  box-shadow: 0 4px 12px rgba(0,0,0,0.08);
  overflow: hidden; /* 内側の要素も角丸に沿わせる */
}

/* 中の帯やナビが角を四角に見せてしまう場合の保険 */
.container > *:first-child > * {
  border-radius: inherit;
}
/* ===== モーダルの中身を白で塗りつぶす ===== */
.modal,
.modal-content,
.dialog,
.dialog-content {
  background: #fff !important;   /* 完全な白背景 */
  border-radius: 16px;           /* 他カードと同じ角丸 */
  padding: 24px;                 /* 内側の余白 */
  border: 1px solid #e5e7eb;     /* 薄い境界線 */
  box-shadow: 0 12px 32px rgba(0,0,0,0.25); /* 浮き上がる影 */
}
#bg-video {
  position: fixed;
  top: 0; left: 0;
  width: 100%; height: 100%;
  object-fit: cover;   /* 画面いっぱいに敷き詰め */
  z-index: -1;         /* 背景に下げる */
}
#bg-video {
  position: fixed;
  top: 0; left: 0;
  width: 100%; height: 100%;
  object-fit: cover;   /* 画面全体に敷き詰め */
  z-index: -1;         /* 背景にする */
}
